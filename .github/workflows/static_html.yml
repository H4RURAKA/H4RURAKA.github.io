# Simple workflow for deploying static content to GitHub Pages

name: Deploy static content to Pages
# 워크플로우의 이름 설정

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  # main branch에 push가 발생했을 때 실행

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Actions 탭에서 수동으로 이 워크플로우를 실행할 수 있도록 설정

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
# GITHUB_TOKEN의 권한을 설정하여 GitHub Pages에 배포하도록 함
# contents는 읽기, pages와 id-token은 쓰기 부여

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false
# 동시에 한 개의 배포만 허용. 진행 중인 배포와 최신 대기 중인 배포 사이에 큐에 있는 실행은 건너뜀
# 진행 중인 실행은 취소하지 않음

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # 단일 배포 작업. 여기서는 배포만 수행
    runs-on: ubuntu-latest
    # 최신 버전의 Ubuntu 러너에서 실행
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # 첫 번째 단계: 코드 체크아웃
        uses: actions/checkout@v3

      - name: Setup Pages
        uses: actions/configure-pages@v3
      # 두 번째 단계: Pages 설정
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: '.'
      # 세 번째 단계: 저장소의 전체 내용을 업로드
        uses: actions/upload-pages-artifact@v2
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
      # 네 번째 단계: GitHub Pages에 배포
        uses: actions/deploy-pages@v2
